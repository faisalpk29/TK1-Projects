package com.tk1.util;


import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import com.tk1.soap.Product;
import com.tk1.soap.Products;
import com.tk1.util.Util;


public class ClientInterface extends javax.swing.JPanel
{
	private static final long serialVersionUID = 328894307224718606L;
	private Controller controller; 
    private Map<String,Product> products ;
  
    private OrderUtil orderUtil ;
    Products pros = null;
    /** Creates new form ClientInterface */
    public ClientInterface(String clientId)
    {
    	
        initComponents();
        controller = new Controller(clientId,this);
        controller.getAvailableProducts();
        pros = new Products();
        orderUtil = new OrderUtil(clientId, new HashMap<String,Product>());
        this.loginBtn.setEnabled(false);
        this.logoutBtn.setEnabled(false);
        userNameField.setEnabled(false);
       
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productInfoTable = new javax.swing.JTable();
        loginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        userOrderPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userOrderTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        totalPriceLabel = new javax.swing.JLabel();
        removeCartBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtRemoveProduct = new javax.swing.JTextField();
        btnOrder = new javax.swing.JButton();
        cartPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        productIDField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productQuantityField = new javax.swing.JTextField();
        addCartBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        productInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
              
            },
            new String [] {
                "ID", "Name", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productInfoTable.setRowHeight(30);
        jScrollPane1.setViewportView(productInfoTable);
        productInfoTable.setShowGrid(true);
        productInfoTable.setShowVerticalLines(true);
        productInfoTable.setGridColor(new Color(0,128,0));
        productInfoTable.setBackground(new Color(127,255,212));
        JTableHeader header = productInfoTable.getTableHeader();
        header.setFont(new Font("Dialog", Font.CENTER_BASELINE, 12));
        header.setBackground(Color.black);
        header.setForeground(Color.yellow);
        loginPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Enter Name:");

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginBtn)
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(loginBtn)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("User Name:");

        userNameLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        logoutBtn.setText("Logout");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutBtn)
                    .addComponent(userNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        userOrderPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        userOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
               
            },
            new String [] {
                "ID","Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userOrderTable.setRowHeight(30);
        jScrollPane2.setViewportView(userOrderTable);
        userOrderTable.setShowGrid(true);
        userOrderTable.setShowVerticalLines(true);
        userOrderTable.setGridColor(new Color(0,128,0));
        userOrderTable.setBackground(new Color(127,255,212));
        JTableHeader header1 = userOrderTable.getTableHeader();
        header1.setFont(new Font("Dialog", Font.CENTER_BASELINE, 12));
        header1.setBackground(Color.black);
        header1.setForeground(Color.yellow);
        
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Total Price:");

        totalPriceLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalPriceLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        removeCartBtn.setText("Remove from Cart");
        removeCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCartBtnActionPerformed(evt);
            }
        });
        jLabel9.setText("Enter Product ID:");

        btnOrder.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnOrder.setText("Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	btnOrderActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout userOrderPanelLayout = new javax.swing.GroupLayout(userOrderPanel);
        userOrderPanel.setLayout(userOrderPanelLayout);
        userOrderPanelLayout.setHorizontalGroup(
            userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userOrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addGroup(userOrderPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userOrderPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(removeCartBtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(userOrderPanelLayout.createSequentialGroup()
                                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))))
                .addContainerGap())
        );
        userOrderPanelLayout.setVerticalGroup(
            userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userOrderPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeCartBtn))
                .addGap(10, 10, 10)
                .addGroup(userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalPriceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(userOrderPanelLayout.createSequentialGroup()
                        .addGroup(userOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOrder))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        cartPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setText("Enter Product ID:");

        jLabel8.setText("Enter Product Quantity:");

        addCartBtn.setText("Add to Cart");
        addCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCartBtnActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout cartPanelLayout = new javax.swing.GroupLayout(cartPanel);
        cartPanel.setLayout(cartPanelLayout);
        cartPanelLayout.setHorizontalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productQuantityField)
                    .addComponent(productIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addCartBtn)
                .addGap(26, 26, 26))
        );
        cartPanelLayout.setVerticalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(productIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCartBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(productQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Available Products");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Shopping Cart");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                                    .addComponent(cartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4)
                                .addGap(298, 298, 298)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(userOrderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(userOrderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {
    	
    	
    	   	
    	Set<String>keys = orderUtil.getOrderMap().keySet();
    	for (String key : keys) {
    		pros.getOrderList().add(orderUtil.getOrderMap().get(key));
			
		}
    	
    	Products pross = controller.saveOrder(pros);
    	orderUtil.setOrderMap(new HashMap<String,Product>());
    	this.updateOrderTable(orderUtil.getOrderMap());
    	if (!pross.getStatus().equals("Success")) {
    		JOptionPane.showMessageDialog(null,pross.getStatus());
		}else{
			JOptionPane.showMessageDialog(null,"Your order has been saved successfully !");
			this.updateTable(pross.getAvailableProducts());
			Util.print("product table updated after save ");
		}
    	
    	
    	
    }
	private void removeCartBtnActionPerformed(java.awt.event.ActionEvent evt) {
		Util.print(this.txtRemoveProduct.getText());
		String pid = this.txtRemoveProduct.getText();
		try {
			Product p = orderUtil.removeProduct(pid);
			Product pro = this.products.get(pid);
			if (pro != null) {
				pro.setQty(pro.getQty() + p.getQty());
				this.products.put(pid, pro);
				
			} else {
				
				this.products.put(pid, p);
			}
			List<Product> list = new ArrayList<Product>(products.values());
			updateTable(list);
			updateOrderTable(orderUtil.getOrderMap());
		} catch (ProductNotFoundException e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
			return;
		}
	}
    private void addCartBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
      
    	Util.print( this.productIDField.getText());
       String pid = this.productIDField.getText();
       Product product = this.products.get(pid) ;
       if (null == product ) {
    	   JOptionPane.showMessageDialog(null,"Invalid product id please try again !");
    	   return;
       }	
      try {
		
	
       int qty = Integer.parseInt(productQuantityField.getText());
       //product.setQty(product.getQty()-qty);
       if (qty > product.getQty() ) {
    	   JOptionPane.showMessageDialog(null,"Invalid product quantity please try again !");
    	   return;
   		}
       
        if (product != null ) {
        	Product p = new Product();
        	p.setPid(product.getPid());
        	p.setPname(product.getPname());
        	p.setPrice(product.getPrice());
        	p.setQty(qty);
        	
        	orderUtil.addProduct(p);
        	
        	
        	updateOrderTable(orderUtil.getOrderMap());
        	product.setQty(product.getQty()-qty);
        	this.products.put(pid, product);
        	if (product.getQty() == 0) {
        		this.products.remove(pid);
        	}
        	List<Product> list = new ArrayList<Product>(products.values());
        	updateTable(list);
			//JOptionPane.showMessageDialog(null,  this.productIDField.getText());
		}
        
      } catch (NumberFormatException fe) {
    	  JOptionPane.showMessageDialog(null,"Invalid input format please try again !");
  	}
        
        
    }  
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_loginBtnActionPerformed
    {//GEN-HEADEREND:event_loginBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCartBtn;
    private javax.swing.JButton btnOrder;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JTextField productIDField;
    private javax.swing.JTextField txtRemoveProduct;
    private javax.swing.JTable productInfoTable;
    private javax.swing.JTextField productQuantityField;
    private javax.swing.JButton removeCartBtn;
    private javax.swing.JLabel totalPriceLabel;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JPanel userOrderPanel;
    private javax.swing.JTable userOrderTable;
    // End of variables declaration//GEN-END:variables
    
    public void updateTable(List<Product> products)
 {
		Util.print("inside update table ...");
		this.products  = new HashMap<String, Product>();
		DefaultTableModel defaultModel = (DefaultTableModel) productInfoTable
				.getModel();
		defaultModel.setRowCount(0);
		DecimalFormat df = new DecimalFormat("#.##");
		for (Product p : products) {
			if (null != p) {
				this.products.put(p.getPid(), p);
				defaultModel.addRow(new Object[] { p.getPid(), p.getPname(),df.format(p.getPrice()), p.getQty() });

			}
		}

	}
  
    public void updateOrderTable(HashMap<String, Product> order)
 {
		Util.print("inside updateOrderTable  ...");
		
		DefaultTableModel defaultModel = (DefaultTableModel) userOrderTable
				.getModel();
		defaultModel.setRowCount(0);
		Set<String> keys = order.keySet();
		DecimalFormat df = new DecimalFormat("#.##");
		for (String key : keys) {
			Product p = order.get(key);
			if (null != p) {
				
				defaultModel.addRow(new Object[] { p.getPid(),df.format(p.getPrice()), p.getQty() });
			}
		}
		
		totalPriceLabel.setText(df.format(orderUtil.getCartPrice()));
	}
}
